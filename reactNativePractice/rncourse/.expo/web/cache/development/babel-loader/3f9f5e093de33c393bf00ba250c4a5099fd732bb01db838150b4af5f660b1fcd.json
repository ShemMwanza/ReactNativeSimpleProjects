{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    courseGoals = _useState4[0],\n    setCourseGoals = _useState4[1];\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler() {\n    setCourseGoals(function (currentCourseGoals) {\n      return [].concat(_toConsumableArray(currentCourseGoals), [enteredGoalText]);\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.flexStyle,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: goalInputHandler,\n        placeholder: \"Your course goal\"\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableHighlight, {\n          style: styles.button,\n          onPress: addGoalHandler,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add Goal\"\n          })\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.goalsContainer,\n      children: _jsx(ScrollView, {\n        children: courseGoals.map(function (goal) {\n          return _jsx(View, {\n            style: styles.goalItems,\n            children: _jsx(Text, {\n              style: styles.goalItemsText,\n              children: goal\n            })\n          }, goal);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10\n  },\n  flexStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  textInput: {\n    width: '50%',\n    height: '70%',\n    marginEnd: 10,\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    borderRadius: 4,\n    paddingHorizontal: 4\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    backgroundColor: '#000000',\n    borderRadius: 4,\n    width: 120,\n    height: 40\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  buttonText: {\n    color: '#fff'\n  },\n  goalsContainer: {},\n  goalItems: {\n    marginVertical: 5,\n    borderRadius: 5,\n    backgroundColor: 'blue',\n    color: 'white',\n    padding: 10,\n    width: '100%'\n  },\n  goalItemsText: {\n    color: 'white'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","Button","StyleSheet","Text","View","TouchableHighlight","Alert","TextInput","ScrollView","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","_useState3","_useState4","courseGoals","setCourseGoals","goalInputHandler","enteredText","addGoalHandler","currentCourseGoals","concat","_toConsumableArray","style","styles","container","children","flexStyle","textInput","onChangeText","placeholder","buttonContainer","button","onPress","buttonText","goalsContainer","map","goal","goalItems","goalItemsText","create","flex","backgroundColor","alignItems","justifyContent","marginTop","flexDirection","marginVertical","width","height","marginEnd","borderWidth","borderColor","borderRadius","paddingHorizontal","color","padding"],"sources":["C:/Users/shemr/Documents/PersonalProjects/ReactNative/reactNativePractice/rncourse/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { Button, StyleSheet, Text, View, TouchableHighlight, Alert, TextInput, ScrollView } from 'react-native';\n\nexport default function App() {\n  const [enteredGoalText, setEnteredGoalText] = useState('');\n  const [courseGoals, setCourseGoals] = useState([]);\n\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler() {\n    setCourseGoals(currentCourseGoals => \n      [\n        ...currentCourseGoals, enteredGoalText,\n      ]);\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.flexStyle}>\n        <TextInput style={styles.textInput} onChangeText={goalInputHandler} placeholder='Your course goal' />\n        <View style={styles.buttonContainer}>\n          <TouchableHighlight style={styles.button} onPress={addGoalHandler}>\n            <Text style={styles.buttonText}>Add Goal</Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n      <View style={styles.goalsContainer}>\n      <ScrollView>\n        {courseGoals.map((goal) => \n        <View style={styles.goalItems} key={goal}>\n          <Text style={styles.goalItemsText}>{goal}</Text></View>\n        )}\n        </ScrollView>\n      </View>\n      \n      {/* <View style={styles.buttonContainer}>\n        <TouchableHighlight style={styles.button} onPress={() => Alert.alert('Clicked')}>\n          <Text style={styles.buttonText}>Click</Text>\n        </TouchableHighlight>\n      </View> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  flexStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginVertical: 5,\n  },\n  textInput: {\n    width: '50%',\n    height: '70%',\n    marginEnd: 10,\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    borderRadius: 4,\n    paddingHorizontal: 4,\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    backgroundColor: '#000000',\n    borderRadius: 4,\n    width: 120,\n    height: 40,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  buttonText: {\n    color: '#fff',\n  },\n  goalsContainer: {\n    // flex: 1,\n  },\n  goalItems: {\n    marginVertical: 5,\n    borderRadius: 5,\n    backgroundColor: 'blue',\n    color: 'white',\n    padding: 10,\n    width: '100%',\n  },\n  goalItemsText: {\n    color: 'white',\n  },\n});\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA8Cd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAAI,UAAA,GAAsCnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,SAASG,gBAAgBA,CAACC,WAAW,EAAE;IACrCN,kBAAkB,CAACM,WAAW,CAAC;EACjC;EACA,SAASC,cAAcA,CAAA,EAAG;IACxBH,cAAc,CAAC,UAAAI,kBAAkB;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAE1BF,kBAAkB,IAAET,eAAe;IAAA,CACvC,CAAC;EACN;EACA,OACEL,KAAA,CAACR,IAAI;IAACyB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,KAAA,CAACR,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,GAC5BtB,IAAA,CAACH,SAAS;QAACsB,KAAK,EAAEC,MAAM,CAACI,SAAU;QAACC,YAAY,EAAEZ,gBAAiB;QAACa,WAAW,EAAC;MAAkB,CAAE,CAAC,EACrG1B,IAAA,CAACN,IAAI;QAACyB,KAAK,EAAEC,MAAM,CAACO,eAAgB;QAAAL,QAAA,EAClCtB,IAAA,CAACL,kBAAkB;UAACwB,KAAK,EAAEC,MAAM,CAACQ,MAAO;UAACC,OAAO,EAAEd,cAAe;UAAAO,QAAA,EAChEtB,IAAA,CAACP,IAAI;YAAC0B,KAAK,EAAEC,MAAM,CAACU,UAAW;YAAAR,QAAA,EAAC;UAAQ,CAAM;QAAC,CAC7B;MAAC,CACjB,CAAC;IAAA,CACH,CAAC,EACPtB,IAAA,CAACN,IAAI;MAACyB,KAAK,EAAEC,MAAM,CAACW,cAAe;MAAAT,QAAA,EACnCtB,IAAA,CAACF,UAAU;QAAAwB,QAAA,EACRX,WAAW,CAACqB,GAAG,CAAC,UAACC,IAAI;UAAA,OACtBjC,IAAA,CAACN,IAAI;YAACyB,KAAK,EAAEC,MAAM,CAACc,SAAU;YAAAZ,QAAA,EAC5BtB,IAAA,CAACP,IAAI;cAAC0B,KAAK,EAAEC,MAAM,CAACe,aAAc;cAAAb,QAAA,EAAEW;YAAI,CAAO;UAAC,GADdA,IACoB,CAAC;QAAA,CACzD;MAAC,CACW;IAAC,CACT,CAAC;EAAA,CAOH,CAAC;AAEX;AAEA,IAAMb,MAAM,GAAG5B,UAAU,CAAC4C,MAAM,CAAC;EAC/Bf,SAAS,EAAE;IACTgB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE;EACb,CAAC;EACDlB,SAAS,EAAE;IACTmB,aAAa,EAAE,KAAK;IACpBF,cAAc,EAAE,eAAe;IAC/BD,UAAU,EAAE,QAAQ;IACpBI,cAAc,EAAE;EAClB,CAAC;EACDnB,SAAS,EAAE;IACToB,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE;EACrB,CAAC;EACDvB,eAAe,EAAE;IACfgB,cAAc,EAAE,EAAE;IAClBL,eAAe,EAAE,SAAS;IAC1BW,YAAY,EAAE,CAAC;IACfL,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC;EACDjB,MAAM,EAAE;IACNW,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBH,IAAI,EAAE;EACR,CAAC;EACDP,UAAU,EAAE;IACVqB,KAAK,EAAE;EACT,CAAC;EACDpB,cAAc,EAAE,CAEhB,CAAC;EACDG,SAAS,EAAE;IACTS,cAAc,EAAE,CAAC;IACjBM,YAAY,EAAE,CAAC;IACfX,eAAe,EAAE,MAAM;IACvBa,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,EAAE;IACXR,KAAK,EAAE;EACT,CAAC;EACDT,aAAa,EAAE;IACbgB,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}