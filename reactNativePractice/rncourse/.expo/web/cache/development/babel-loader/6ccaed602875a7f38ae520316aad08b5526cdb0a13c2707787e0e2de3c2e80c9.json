{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GoalInput(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  function goalInputHandler(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandler() {\n    props.onAddGoal(enteredGoalText);\n  }\n  return _jsxs(Modal, {\n    children: [\" \", _jsxs(View, {\n      style: styles.flexStyle,\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        onChangeText: goalInputHandler,\n        placeholder: \"Your course goal\"\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableHighlight, {\n          style: styles.button,\n          onPress: addGoalHandler,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Add Goal\"\n          })\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  flexStyle: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  textInput: {\n    width: '50%',\n    height: '70%',\n    marginEnd: 10,\n    borderWidth: 1,\n    borderColor: '#cccccc',\n    borderRadius: 4,\n    paddingHorizontal: 4\n  },\n  buttonContainer: {\n    marginVertical: 10,\n    backgroundColor: '#000000',\n    borderRadius: 4,\n    width: 120,\n    height: 40\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  buttonText: {\n    color: '#fff'\n  }\n});","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","GoalInput","props","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","goalInputHandler","enteredText","addGoalHandler","onAddGoal","Modal","children","View","style","styles","flexStyle","TextInput","textInput","onChangeText","placeholder","buttonContainer","TouchableHighlight","button","onPress","Text","buttonText","StyleSheet","create","flexDirection","justifyContent","alignItems","marginVertical","width","height","marginEnd","borderWidth","borderColor","borderRadius","paddingHorizontal","backgroundColor","flex","color"],"sources":["C:/Users/shemr/Documents/PersonalProjects/ReactNative/reactNativePractice/rncourse/components/GoalInput.js"],"sourcesContent":["import { View, Text, StyleSheet, TextInput, TouchableHighlight, Modal } from 'react-native'\r\nimport React, { useState } from 'react'\r\nexport default function GoalInput(props) {\r\n    const [enteredGoalText, setEnteredGoalText] = useState('');\r\n    function goalInputHandler(enteredText) {\r\n        setEnteredGoalText(enteredText);\r\n    }\r\n    function addGoalHandler() {\r\n        props.onAddGoal(enteredGoalText);\r\n    }\r\n  return (\r\n    <Modal> <View style={styles.flexStyle}>\r\n          <TextInput style={styles.textInput} onChangeText={goalInputHandler} placeholder='Your course goal' />\r\n          <View style={styles.buttonContainer}>\r\n              <TouchableHighlight style={styles.button} onPress={addGoalHandler}>\r\n                  <Text style={styles.buttonText}>Add Goal</Text>\r\n              </TouchableHighlight>\r\n          </View>\r\n      </View>\r\n      </Modal>     \r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n   \r\n    flexStyle: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginVertical: 5,\r\n    },\r\n    textInput: {\r\n        width: '50%',\r\n        height: '70%',\r\n        marginEnd: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#cccccc',\r\n        borderRadius: 4,\r\n        paddingHorizontal: 4,\r\n    },\r\n    buttonContainer: {\r\n        marginVertical: 10,\r\n        backgroundColor: '#000000',\r\n        borderRadius: 4,\r\n        width: 120,\r\n        height: 40,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n    },\r\n});"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACvC,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACrC,IAAAC,SAAA,GAA8CP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,SAASI,gBAAgBA,CAACC,WAAW,EAAE;IACnCF,kBAAkB,CAACE,WAAW,CAAC;EACnC;EACA,SAASC,cAAcA,CAAA,EAAG;IACtBR,KAAK,CAACS,SAAS,CAACL,eAAe,CAAC;EACpC;EACF,OACEN,KAAA,CAACY,KAAK;IAAAC,QAAA,GAAC,GAAC,EAAAb,KAAA,CAACc,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAJ,QAAA,GAChCf,IAAA,CAACoB,SAAS;QAACH,KAAK,EAAEC,MAAM,CAACG,SAAU;QAACC,YAAY,EAAEZ,gBAAiB;QAACa,WAAW,EAAC;MAAkB,CAAE,CAAC,EACrGvB,IAAA,CAACgB,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACM,eAAgB;QAAAT,QAAA,EAChCf,IAAA,CAACyB,kBAAkB;UAACR,KAAK,EAAEC,MAAM,CAACQ,MAAO;UAACC,OAAO,EAAEf,cAAe;UAAAG,QAAA,EAC9Df,IAAA,CAAC4B,IAAI;YAACX,KAAK,EAAEC,MAAM,CAACW,UAAW;YAAAd,QAAA,EAAC;UAAQ,CAAM;QAAC,CAC/B;MAAC,CACnB,CAAC;IAAA,CACL,CAAC;EAAA,CACA,CAAC;AAEd;AACA,IAAMG,MAAM,GAAGY,UAAU,CAACC,MAAM,CAAC;EAE7BZ,SAAS,EAAE;IACPa,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB,CAAC;EACDd,SAAS,EAAE;IACPe,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,SAAS;IACtBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE;EACvB,CAAC;EACDlB,eAAe,EAAE;IACbW,cAAc,EAAE,EAAE;IAClBQ,eAAe,EAAE,SAAS;IAC1BF,YAAY,EAAE,CAAC;IACfL,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACZ,CAAC;EACDX,MAAM,EAAE;IACJQ,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,QAAQ;IACxBW,IAAI,EAAE;EACV,CAAC;EACDf,UAAU,EAAE;IACRgB,KAAK,EAAE;EACX;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}